import yfinance as yf


# find percentage return for every day in pandas p,
# then use kadane algorithm to find where the stock's best percentage performance was
class StockData:
    def __init__(self, ticker, startDate, endDate):
        self.ticker = ticker
        self.startDate = startDate
        self.endDate = endDate

    def downloadstock(self):  # downloads the stock data with assigned ticker, start of program
        self.fianceData = yf.download(self.ticker, start=self.startDate, end=self.endDate, interval="1d")
        self.fianceData = self.fianceData.dropna()

    def percentagecalc(self):
        self.percentage = []
        for index, row in self.fianceData.iterrows():
            self.percentage.append((row['Close'] - row['Open']) / row['Open'] * 100)

        self.createcolumn()

    def createcolumn(self):
        self.fianceData['Percentage'] = self.percentage

    def test(self):
        print(self.fianceData)


def call():
    startDate = "2010-06-01"
    endDate = "2020-06-01"

    stock1 = StockData("ATVI", startDate, endDate)
    stock1.downloadstock()
    stock1.percentagecalc()
    stock1.test()

    stock2 = StockData("KO", startDate, endDate)
    stock2.downloadstock()
    stock2.percentagecalc()
    stock2.test()


call()
